{"version":3,"sources":["components/CustomNavLink/CustomNavLink.tsx","components/Navbar/Navbar.tsx","Pages/PageNotFound/PageNotFound.tsx","Pages/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","Pages/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["CustomNavLink","memo","to","text","className","isActive","cn","Navbar","role","PageNotFound","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","isWoman","sex","slug","name","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","hasError","setHasError","isLoading","setIsLoading","loadPeople","loadedPeople","peopleWithParents","find","personFather","personMother","Object","assign","useEffect","NoPeopleExist","length","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d3a2aa42.chunk.js","sourcesContent":["import { FC, memo } from 'react';\nimport { NavLink, To } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface Props {\n  to: To,\n  text: string,\n}\n\nexport const CustomNavLink: FC<Props> = memo(({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => {\n      return cn('navbar-item', {\n        'has-background-grey-lighter': isActive,\n      });\n    }}\n    to={to}\n  >\n    {text}\n  </NavLink>\n));\n","import { FC } from 'react';\nimport { CustomNavLink } from '../CustomNavLink/CustomNavLink';\n\nexport const Navbar: FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <CustomNavLink to=\"/\" text=\"Home\" />\n\n          <CustomNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { memo } from 'react';\n\nexport const PageNotFound = memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import { memo } from 'react';\n\nexport const HomePage = memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { FC, memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person,\n}\nexport const PersonLink: FC<Props> = memo(({ person }) => {\n  const isWoman = person.sex === 'f';\n\n  return (\n\n    <Link\n      to={person.slug}\n      className={cn({ 'has-text-danger': isWoman })}\n    >\n      {person.name}\n    </Link>\n  );\n});\n","import cn from 'classnames';\nimport { FC, memo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[];\n}\nexport const PeopleTable: FC<Props> = memo(({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={cn({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName || '-'}\n            </td>\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import { memo, useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable';\n\nexport const PeoplePage = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const loadPeople = async () => {\n    try {\n      setIsLoading(true);\n\n      const loadedPeople = await getPeople();\n\n      const peopleWithParents = loadedPeople.map(person => {\n        const father = loadedPeople.find(\n          personFather => personFather.name === person.fatherName,\n        );\n        const mother = loadedPeople.find(\n          personMother => personMother.name === person.motherName,\n        );\n\n        return Object.assign(person, { father, mother });\n      });\n\n      setPeople(peopleWithParents);\n    } catch {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const NoPeopleExist = !isLoading && !people.length && hasError === false;\n\n  return (\n    <div className=\"container\">\n\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            && <Loader />}\n\n          {hasError\n            && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n          {NoPeopleExist\n          && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0\n         && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </div>\n  );\n});\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\nimport { PageNotFound } from './Pages/PageNotFound';\nimport { HomePage } from './Pages/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"/people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}